# -*- coding: utf-8 -*-
"""AadharCard.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gu_NuTjwWGzUh-z_arPOVSMbvLvkGIDY
"""

!pip install easyocr



import matplotlib.pyplot as plt
import cv2
import easyocr
from pylab import rcParams
from IPython.display import Image
import numpy as np
import math

def midpoint(x1, y1, x2, y2):
    x_mid = int((x1 + x2)/2)
    y_mid = int((y1 + y2)/2)
    return (x_mid, y_mid)

def Aadhar_mask(image):
  rcParams['figure.figsize'] = 8, 16
  reader = easyocr.Reader(['en', 'hi'])
  #file_name = "front.jpeg"
  #Image(image)
  output = reader.readtext(image)
  output
  cord1 = output[7][0]

  x0 = cord1[0][0]
  y0 = cord1[0][1]
  x1 = cord1[1][0]
  y1 = cord1[1][1] 
  x2 = cord1[2][0] 
  y2 = cord1[2][1]
  x3 = cord1[3][0]
  y3 = cord1[3][1]

  """x00 = cord1[0][0]
  y00 = cord1[0][1]
  x11 = cord1[1][0]
  y11 = cord1[1][1] 
  x22 = cord1[2][0] 
  y22 = cord1[2][1]
  x33 = cord1[3][0]
  y33 = cord1[3][1] """

  x_mid0, y_mid0 = midpoint(x1, y1, x2, y2)
  x_mid1, y_mid1 = midpoint(x0, y0, x3, y3)
  thickness = int(math.sqrt( (x2 - x1)**2 + (y2 - y1)**2 ))
  x_min, y_min = [int(min(idx)) for idx in zip(*cord1)]
  x_max, y_max = [int(max(idx)) for idx in zip(*cord1)]
  #mask
  mask = np.zeros(image.shape[:2], dtype="uint8")
  cv2.rectangle(image,(x_min,y_min),(x_max,y_max),(255,255,255),2)
  cv2.line(mask, (x_mid1, y_mid1), (x_mid0, y_mid0), (255,0,0), thickness)
  inpainted_img = cv2.inpaint(image, mask, 15, cv2.INPAINT_NS)
  #plt.imshow(cv2.cvtColor(image,cv2.COLOR_BGR2RGB))
  plt.imshow(cv2.cvtColor(inpainted_img, cv2.COLOR_BGR2RGB))

file_name1='ekka.jpeg'
image = cv2.imread(file_name1)
Aadhar_mask(image)





rcParams['figure.figsize'] = 8, 16

reader = easyocr.Reader(['en'])

file_name = "ekka.jpeg"
image = cv2.imread(file_name)

Image(file_name)

output = reader.readtext(file_name)

type(output)

output

output[10]

cord = output[10][0]

#cord1= output[28][0]

cord

#cord1

#cord2 = output[28][0]

x0 = cord[0][0]
y0 = cord[0][1]
x1 = cord[1][0]
y1 = cord[1][1] 
x2 = cord[2][0] 
y2 = cord[2][1]
x3 = cord[3][0]
y3 = cord[3][1]

def midpoint(x1, y1, x2, y2):
    x_mid = int((x1 + x2)/2)
    y_mid = int((y1 + y2)/2)
    return (x_mid, y_mid)

x_mid0, y_mid0 = midpoint(x1, y1, x2, y2)
x_mid1, y_mid1 = midpoint(x0, y0, x3, y3)

thickness = int(math.sqrt( (x2 - x1)**2 + (y2 - y1)**2 ))

x_min, y_min = [int(min(idx)) for idx in zip(*cord)]

x_max, y_max = [int(max(idx)) for idx in zip(*cord)]

mask = np.zeros(image.shape[:2], dtype="uint8")

image = cv2.imread(file_name)
cv2.rectangle(image,(x_min,y_min),(x_max,y_max),(255,255,255),2)
cv2.line(mask, (x_mid1, y_mid1), (x_mid0, y_mid0), (255,0,0), thickness)
inpainted_img = cv2.inpaint(image, mask, 7, cv2.INPAINT_NS)
#plt.imshow(cv2.cvtColor(image,cv2.COLOR_BGR2RGB))
plt.imshow(cv2.cvtColor(inpainted_img, cv2.COLOR_BGR2RGB))

res = [lis[1] for lis in output]

res

s=' '
a=s.join(res)

a

import regex as re

d={'Name':None,'DOB':None,'Gender':None,'Mobile_No':None,'Aadhar_No':None}

pattern1= '\d\d\/\d\d\/\d\d\d\d'
pattern2='\d{4}\s?\d{6}'
pattern3= 'MALE|FEMALE'
pattern4= '\s\d{4}\s\d{4}\s\d{4}'

l1=re.findall(pattern1,a)

l2=re.findall(pattern2,a)
l3=re.findall(pattern3,a)
l4=re.findall(pattern4,a)

x=a

pattern5= 'INDIA.+DOB'
l5=re.findall(pattern5,x)
print(l5)
y=l5[0]
y=y.replace(' DOB','')
y=y.replace('INDIA ','')
print(y)

print(l1,l2,l3,l4)

d['Name']=y
d['DOB']= l1[0]
d['Gender']= l3[0]
d['Mobile_No']= l2[0]
d['Aadhar_No']=l4[0]
print(d)



rcParams['figure.figsize'] = 8, 16

reader = easyocr.Reader(['en','hi'])

file_name1 = "dukka.jpeg"
#image = cv2.imread(file_name)

Image(file_name1)

output = reader.readtext(file_name1)

output

res = [lis[1] for lis in output]

s1=' '
a1=s.join(res)

a1

start=a1.rfind("Address")

b1=a1[start+9:]


d={'Address':None}
import regex as re
pattern1= '.+\d{6}'

l1=re.findall(pattern1,b1)
print(l1)

d['Address']=l1[0]
print(d)



